title: Introduction to Git 
author: Vijay Kumar B.
email: vijaykumar@bravegnu.org
date: 2013-06-05
keywords: [ git, vcs, version control, dvcs ]
---
Distributed VCS:

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository. Thus if any server dies, and thxese systems were
    collaborating via it, any of the client repositories can be copied
    back up to the server to restore it. Every checkout is really a
    full backup of all the data.

  - Yet another para.

Multi Page Test:

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - Every checkout is really a full backup of all the data.

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - Every checkout is really a full backup of all the data.

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - Every checkout is really a full backup of all the data.

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - Every checkout is really a full backup of all the data.

Version Control Systems:

  - Git
  - Hg
  - Bazaar
  - Darcs

Nested Lists:

  - Git is an *open source*, distributed version control system
    designed for speed and efficiency

  - - Hg
    - Darcs
    - Mercurial
    - Bazaar

  - You can get a Git project using two main approaches. The first
    takes an existing project or directory and imports it into
    Git. The second clones an existing Git repository from another
    server.

Center Image:

  - { type: image, src: control.png, width: 360 }

Mainframes:

  - { type: layout, mode: two-col, width: auto }

  - { type: image, src: mainframe.png, width: 288, pos: left }
  
  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't just
    check out the latest snapshot of the files they fully mirror the repository.

  - Thus if any server dies, and these systems were collaborating via it, any
    of the client repositories can be copied back up to the server to restore
    it.

Ramdisk:

  - { type: layout, mode: two-col }

  - { type: image, src: ramdisk.png, width: 144, pos: left }

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - In a DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don't
    just check out the latest snapshot of the files they fully mirror
    the repository.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.
     
  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

  - Thus if any server dies, and these systems were collaborating via
    it, any of the client repositories can be copied back up to the
    server to restore it.

Code Test:

  - type: code
    lang: python
    code: |
        if len(sys.argv) != 4:
            usage("error: insufficient arguments\n")

        try:
            peacock = Peacock()
            peacock.main(sys.argv[1], sys.argv[2], sys.argv[3])
        except FormatError as e:
            error(str(e))
        except ThemeError as e:
            error(str(e))
        
Without Lang:

  - { type: "layout", mode: two-col, width: auto }
  - type: code
    code: |
        # FIXME: Handle lang not present
        lang = code["lang"]
        try:
            lexer = pygments.lexers.get_lexer_by_name(lang)
        except pygments.util.ClassNotFound:
            raise FormatError("Unknown 'lang' '%s'" % lang)

  - When no lang is specified it is rendered without
    highlighting. Explicit lang is to be specified if highlighting is
    required.

    
    Consult the documentation for the possible lang values.

Python Console:

  - type: code
    lang: pycon
    code: |
        >>> x = int(raw_input("Please enter an integer: "))
        Please enter an integer: 42
        >>> if x < 0:
        ...      x = 0
        ...      print 'Negative changed to zero'
        ... elif x == 0:
        ...      print 'Zero'
        ... elif x == 1:
        ...      print 'Single'
        ... else:
        ...      print 'More'
        ...
        More